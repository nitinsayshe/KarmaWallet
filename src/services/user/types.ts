import { UserRoles } from '../../lib/constants';
import { ILegacyUserDocument } from '../../models/legacyUser';
import { IUserIntegrations, IUserDocument } from '../../models/user';
import { IRequest } from '../../types/request';

export interface IVerifyTokenBody {
  token: string;
}

export interface IEmail {
  email: string;
}

export interface ILoginData {
  email: string;
  password?: string;
  biometricSignature?: string;
  token?: string;
  fcmToken: string;
  deviceInfo?: {
    manufacturer: string,
    bundleId: string,
    deviceId: string,
    apiLevel: string,
    applicaitonName: string,
    model: string,
    buildNumber: string,
  };
}

export interface IUpdatePasswordBody {
  newPassword: string;
  password: string;
}

export interface IUrlParam {
  key: string;
  value: string;
}

export interface IUserData extends ILoginData {
  name: string;
  zipcode?: string;
  role?: UserRoles;
  promo?: string;
  pw?: string;
  shareASaleId?: boolean;
  referralParams?: IUrlParam[];
  integrations?: IUserIntegrations
}
export interface IRegisterUserData {
  name: string;
  token?: string;
  visitorId?: string;
  password: string;
  promo?: string;
  isAutoGenerated?: boolean;
}

export interface IEmailVerificationData {
  email: string;
  code: string;
  tokenValue: string;
}

export interface IUpdateUserEmailParams {
  user: IUserDocument;
  email: string;
  legacyUser: ILegacyUserDocument;
  req: IRequest;
  pw: string;
}

export type UserKeys = keyof IUserData;
